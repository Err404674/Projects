local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'

Players = cloneref(game:GetService("Players"))
Plr = Players.LocalPlayer

local hrp = game.Workspace.Enemies:FindFirstChild('HumanoidRootPart',true)

local OGWS = Plr.Character.Humanoid.WalkSpeed

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local Themes = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local Saves = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = Library.Options
local Toggles = Library.Toggles

Library.ShowToggleFrameInKeybinds = true 
Library.ShowCustomCursor = false
Library.NotifySide = "Right"

local Menu = Library:CreateWindow({
    Title = 'GOD OPS (PLACE ID: '..game.PlaceId..')',
	Center = true,
	AutoShow = true,
	Resizable = true,
	ShowCustomCursor = false,
	NotifySide = "Right",
	TabPadding = 8,
	MenuFadeTime = 0
})

local Tabs = {
    Main = Menu:AddTab('Main'),
    Settings = Menu:AddTab('UI Settings')
}

local LeftGB = Tabs.Main:AddLeftGroupbox('Main')
local RightGB = Tabs.Main:AddRightGroupbox('Player')

local SettingsGB = Tabs.Settings:AddLeftGroupbox('Settings')

local function autoaim()
local oldcall
    oldcall = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if not hrp then
        repeat
        task.wait()
        until hrp
    end

    if method == "FireServer" and tostring(self) == "RemoteEvent" then
        if hrp and typeof(args[1]) == "Vector3" then
            args[1] = hrp.Position
        end

        if hrp then
            args[2] = hrp.Position.X
            args[3] = hrp.Position.Y
            args[4] = hrp.Position.Z
        end
    end

    return oldcall(self, unpack(args))
end)
end

local function tigodmode()
local mt = getrawmetatable(game)
setreadonly(mt, false)

local oldnamecall = mt.__namecall

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()

    if method == "FireServer" and self.Name == "Damage" or self.Name == "AttackOnClient" then
        return nil
    end

    return oldnamecall(self, ...)
end)

setreadonly(mt, true)
end

local Homing = LeftGB:AddButton({
	Text = 'Autoaim Attacks',
	Func = function()
		if not hrp then
            repeat
            task.wait()
            until hrp
        end

        autoaim()
	end,
	DoubleClick = false,

	Tooltip = 'Automatically aims attacks',

	Visible = true
})

LeftGB:AddToggle('Godmode', {
    Text = 'Godmode',
    Tooltip = 'Makes you invincible to enemy attacks',
    
    Default = false,
    Disabled = false,
    Visible = true,
    Risky = false,
    
    Callback = function(Value)
    print(value)
    end
})

local godmodeconnect = nil

Toggles.Godmode:OnChanged(function()
    if Toggles.Godmode.Value == true then
        tigodmode()
        godmodeconnect = game:GetService('RunService').Heartbeat:Connect(function()
            for i,v in ipairs(game.Workspace.Attacks:GetDescendants()) do
                if v:IsA('BasePart') and v:FindFirstChild('TouchInterest') then
                    v.CanTouch = false
                end
            end
        end)
    elseif Toggles.Godmode.Value == false then
        if godmodeconnect then
            godmodeconnect:Disconnect()
        end
    end
end)


RightGB:AddSlider('Walkspeed', {
	Text = 'Walkspeed',
	Default = OGWS,
	Min = 16,
	Max = 500,
	Rounding = 1,
	Compact = false,

	Callback = function(Value)
        Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end,

	Disabled = false,
	Visible = true,
})

SettingsGB:AddLabel('UI Keybind'):AddKeyPicker('MenuKeybind', { Default = 'LeftControl', NoUI = true, Text = 'UI Keybind' })
SettingsGB:AddButton('Unload', function() Library:Unload() end)

Library.ToggleKeybind = Options.MenuKeybind
